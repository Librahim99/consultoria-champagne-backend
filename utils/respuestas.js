module.exports = {
  MESSAGES: {
    NO_REGISTRADO: '‚õî No est√°s registrado como usuario autorizado para usar tickets. Contacta admin para registro.',
    DETALLE_CORTO: '‚ùå Detalle inv√°lido (falta o demasiado corto, m√≠nimo 10 caracteres requeridos). Corrige con detalle m√°s largo y reintenta.',
    CREACION_RAPIDA_REQUIERE_CLIENTE: '‚ùå Creaci√≥n r√°pida requiere cliente asociado. Usa !ticket crear <common> <detalle> para especificar.',
    ERROR_PROCESANDO: error => 'üö® Error procesando el comando (detalle espec√≠fico: ' + error.message + '). Revis√° logs o contacta soporte para resolver.',
    AYUDA_TICKETS: 'üé´ *Panel de Gesti√≥n de Tickets - Interactivo*\n\n1Ô∏è‚É£ *Crear:* !ticket crear <common> <detalle> (tipo/asunto por default)\n2Ô∏è‚É£ *Estado:* !ticket estado <id> <nuevo_estado>\n3Ô∏è‚É£ *Asignar:* !ticket asignar <id> <usuario>\n4Ô∏è‚É£ *Cerrar:* !ticket cerrar <id>\n5Ô∏è‚É£ *Eliminar:* !ticket borrar <id>\n6Ô∏è‚É£ *Listar:* !ticket listar estado <estado>\n7Ô∏è‚É£ *Listar:* !ticket listar fecha <YYYY-MM-DD,YYYY-MM-DD>\n\nüí° _Tambi√©n pod√©s crear un ticket directo:_  \n`!ticket No puedo imprimir desde Chrome` (requiere cliente asociado, m√≠nimo 10 chars)\n‚ö†Ô∏è Todos los tickets requieren un cliente (common de 4 d√≠gitos).',
    NO_PERMISOS: rank => '‚õî No ten√©s permisos para crear tickets (tu rank actual: ' + rank + '). Contact√° admin para obtener acceso.',
    FORMATO_INVALIDO: '‚ùå Formato inv√°lido (falta dato requerido). M√≠nimo: !ticket crear <common> <detalle>\nEjemplo: !ticket crear 0007 "error en impresi√≥n de despachos"\n(Opcional: !ticket crear <common> <tipo> <detalle>)',
    COMMON_INVALIDO: common => '‚ùå Common inv√°lido: "' + common + '" (debe ser exactamente 4 d√≠gitos num√©ricos, ej. 0007). Corrige el common y reintenta.',
    CLIENTE_NO_ENCONTRADO: common => '‚ùå Cliente no encontrado por common "' + common + '" (verifica si el c√≥digo existe o corrige). No se puede crear ticket sin cliente v√°lido.',
    ERROR_CREAR: error => '‚ùå Error al crear ticket (detalle: ' + error.message + '). Verifica inputs como common v√°lido o detalle largo (min 10 chars), y contacta soporte si persiste.'
  },
  responderOk: async (bot, mensaje, texto) => {
    await enviarMensajeSeguro(bot, mensaje, `‚úÖ ${texto}`);
  },

  responderError: async (bot, mensaje, texto) => {
    await enviarMensajeSeguro(bot, mensaje, `‚ùå ${texto}`);
  },

  responderInfo: async (bot, mensaje, texto) => {
    await enviarMensajeSeguro(bot, mensaje, `‚ÑπÔ∏è ${texto}`);
  },

  responderAdvertencia: async (bot, mensaje, texto) => {
    await enviarMensajeSeguro(bot, mensaje, `‚ö†Ô∏è ${texto}`);
  },

  responderAyuda: async (bot, mensaje, texto) => {
    await enviarMensajeSeguro(bot, mensaje, `‚ÑπÔ∏è ${texto}`);
  }
};

async function enviarMensajeSeguro(bot, mensaje, texto) {
  try {
    const jid = mensaje?.key?.remoteJid || mensaje?.remoteJid || mensaje;
    
    if (!jid || typeof jid !== 'string') {
      console.error('‚ùå No se puede enviar mensaje. remoteJid inv√°lido.');
      console.error('Mensaje recibido:', mensaje);
      return;
    }

    const options = {};
    if (mensaje?.key?.remoteJid) {
      options.quoted = mensaje;
    }

    await bot.sendMessage(jid, { text: texto }, options);
  } catch (err) {
    console.error('‚ùå Error al enviar mensaje:', err);
  }
}